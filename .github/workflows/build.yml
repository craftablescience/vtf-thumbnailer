name: Build
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    # nothing here

jobs:
  build-linux:
    strategy:
      matrix:
        build_type: [Debug, Release]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Dependencies
        run: sudo apt update && sudo apt install -y ninja-build

      - name: Configure CMake
        run: cmake -G "Ninja" -B build -DCMAKE_BUILD_TYPE=${{matrix.build_type}}

      - name: Build
        run: cmake --build build --target vtf-thumbnailer --config ${{matrix.build_type}}

      - name: Create Installer
        working-directory: build
        run: cpack

      - name: Upload Release
        if: matrix.build_type == 'Release'
        uses: actions/upload-artifact@v4
        with:
          name: 'VTF-Thumbnailer-Linux'
          path: |
            build/*.deb
          retention-days: 7

  build-kde5:
    strategy:
      matrix:
        build_type: [Debug, Release]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Dependencies
        run: |
          sudo apt update && sudo apt install -y ninja-build qtdeclarative5-dev extra-cmake-modules libkf5guiaddons-dev libkf5crash-dev kinit-dev kio-extras libkf5kdelibs4support5-bin librhash0 gettext libkdecorations2-dev libkf5auth-dev libkf5auth-dev-bin libkf5auth-doc libkf5codecs-dev libkf5codecs-doc libkf5config-dev libkf5config-dev-bin libkf5config-doc libkf5configwidgets-dev libkf5configwidgets-doc libkf5coreaddons-dev libkf5coreaddons-dev-bin libkf5coreaddons-doc libkf5guiaddons-dev libkf5guiaddons-doc libkf5i18n-dev libkf5i18n-doc libkf5widgetsaddons-dev libkf5widgetsaddons-doc libkf5windowsystem-dev libkf5windowsystem-doc libqt5quickshapes5 libqt5scripttools5 libqt5x11extras5-dev qtdeclarative5-dev qtscript5-dev kinit-dev libkf5attica-dev libkf5attica-doc libkf5bookmarks-dev libkf5bookmarks-doc libkf5completion-dev libkf5completion-doc libkf5crash-dev libkf5crash-doc libkf5dbusaddons-dev libkf5dbusaddons-doc libkf5globalaccel-dev libkf5globalaccel-doc libkf5iconthemes-dev libkf5iconthemes-doc libkf5itemviews-dev libkf5itemviews-doc libkf5jobwidgets-dev libkf5jobwidgets-doc libkf5kio-dev libkf5kio-doc libkf5notifications-dev libkf5notifications-doc libkf5service-dev libkf5service-doc libkf5solid-dev libkf5solid-doc libkf5xmlgui-dev libkf5xmlgui-doc kirigami2-dev libice-dev libkf5activities-dev libkf5activities-doc libkf5archive-dev libkf5archive-doc libkf5declarative-dev libkf5declarative-doc libkf5kirigami2-doc libkf5newstuff-dev libkf5newstuff-doc libkf5package-dev libkf5package-doc libkf5plasma-dev libkf5plasma-doc libkf5wayland-dev libkf5wayland-doc libsm-dev libwayland-bin libwayland-dev libx11-xcb-dev libxcb-randr0-dev libxcb-render0-dev libxcb-shape0-dev libxcb-util-dev libxcb-util0-dev

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: '==3.1.*'
          version: '5.15.2'
          host: 'linux'
          target: 'desktop'
          arch: 'gcc_64'
          dir: '${{github.workspace}}/qt'
          modules: ${{env.QT_MODULES}}
          cache: true

      - name: Configure CMake
        run: cmake -G "Ninja" -B build -DCMAKE_INSTALL_PREFIX=`kf5-config --prefix` -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DQt5_DIR="${{github.workspace}}/qt" -DVTF_THUMBNAILER_BUILD_KDE_PLUGIN=ON

      - name: Build
        run: cmake --build build --target vtf-thumbnailer --config ${{matrix.build_type}}

      - name: Create Installer
        working-directory: build
        run: cpack

      - name: Upload Release
        if: matrix.build_type == 'Release'
        uses: actions/upload-artifact@v4
        with:
          name: 'VTF-Thumbnailer-KDE5'
          path: |
            build/*.deb
          retention-days: 7

  build-kde6:
    if: false # disable for now
    strategy:
      matrix:
        build_type: [Debug, Release]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Dependencies
        run: |
          sudo apt update && sudo apt install -y ninja-build

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: '==3.1.*'
          version: '6.5.3'
          host: 'linux'
          target: 'desktop'
          arch: 'gcc_64'
          dir: '${{github.workspace}}/qt'
          modules: ${{env.QT_MODULES}}
          cache: true

      - name: Configure CMake
        run: cmake -G "Ninja" -B build -DCMAKE_INSTALL_PREFIX=`kf6-config --prefix` -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DQt6_DIR="${{github.workspace}}/qt" -DVTF_THUMBNAILER_BUILD_KDE_PLUGIN=ON

      - name: Build
        run: cmake --build build --target vtf-thumbnailer --config ${{matrix.build_type}}

      - name: Create Installer
        working-directory: build
        run: cpack

      - name: Upload Release
        if: matrix.build_type == 'Release'
        uses: actions/upload-artifact@v4
        with:
          name: 'VTF-Thumbnailer-KDE6'
          path: |
            build/*.deb
          retention-days: 7

  build-windows:
    if: false # disable for now
    strategy:
      matrix:
        build_type: [Debug, Release]
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up MSVC
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64
          spectre: true

      - name: Configure CMake
        run: cmake -G "Ninja" -B build -DCMAKE_BUILD_TYPE=${{matrix.build_type}}

      - name: Build
        run: cmake --build build --target vtf-thumbnailer --config ${{matrix.build_type}}

      - name: Create Installer
        if: matrix.build_type == 'Release'
        working-directory: build
        run: cpack

      - name: Upload Release
        if: matrix.build_type == 'Release'
        uses: actions/upload-artifact@v4
        with:
          name: 'VTF-Thumbnailer-Windows'
          path: |
            build/*.exe
          retention-days: 7
